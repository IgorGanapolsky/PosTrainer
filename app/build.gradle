apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.bracketcove.postrainer"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 9
        versionName "2.1"

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
        }

    }

    // As per instructions for gradle plugin 3.0:
    // https://developer.android.com/studio/build/gradle-plugin-3-0-0-migration.html#variant_aware
    flavorDimensions "app"

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "app"
        }
        prod {
            dimension "app"
        }
    }

    //Stops creation of mockRelease
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    sourceSets {
        prod {
            java.srcDirs = ['src/prod/java', 'src/prod/java/com/bracketcove/postrainer/scheduler']
        }
    }
}

dependencies {
    //wondering what this rootProject stuff is? Check out project level build.gradle
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion
    implementation 'gun0912.ted:tedpermission:1.0.3'
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor 'android.arch.lifecycle:compiler:' + rootProject.archLifecycleVersion
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    provided "javax.annotation:jsr250-api:$rootProject.jsr250Version"

    // Testing libs
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.rulesVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}
